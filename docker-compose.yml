services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      - db
    networks:
      - appnetwork

  webserver:
    image: nginx:latest
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - db
    networks:
      - appnetwork

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laraveluser
      MYSQL_PASSWORD: 123456
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - appnetwork

  npm:
    image: node:23
    container_name: npm_dev
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    command: sh -c "npm run dev"
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - appnetwork

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - appnetwork

  redis:
    image: redis:alpine
    container_name: redis_server
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - appnetwork

  queue:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: queue_worker
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan queue:work
    depends_on:
      - db
      - redis
      - backend
    volumes:
      - ./backend:/var/www
    networks:
      - appnetwork

volumes:
  db_data:

networks:
  appnetwork:
    driver: bridge
